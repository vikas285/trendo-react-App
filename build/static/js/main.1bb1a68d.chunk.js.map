{"version":3,"sources":["logo.svg","Components/Navbar.js","Components/Banner.js","Components/Movies.js","Components/Favourite.js","Components/Merge.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","style","display","justifyContent","padding","to","textDecoration","className","marginLeft","marginTop","borderRadius","boxShadow","Component","Banner","props","movie","this","pic","role","src","backdrop_path","alt","title","original_title","overview","Movies","changeMovies","a","axios","get","state","currPage","res","data","setState","movies","results","count","handleFavClickState","banMov","handleRightClick","console","log","tempArr","i","pArr","length","push","handleLeftClick","handleOnPageClick","value","handleFavClick","oldData","JSON","parse","localStorage","getItem","favourites","includes","id","filter","mov","setItem","stringify","temp","map","hover","class","movieObj","onMouseEnter","onMouseLeave","width","onClick","val","Favourite","handleGenreChange","genre","currgen","sortPopularityDesc","sort","objA","objB","popularity","sortPopularityAsc","sortRatingDesc","vote_average","sortRatingAsc","handlePageChange","page","handleDelete","newarr","genres","currText","limit","genreids","forEach","genre_ids","unshift","filterarr","toLowerCase","pages","Math","ceil","pagesarr","si","ei","slice","background","color","type","placeholder","onChange","e","target","scope","textAlign","merge","flex","height","flexDirection","App","path","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bb1a68d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          padding: \"0rem 2rem\",\n        }}\n      >\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          {\" \"}\n          <h2\n            className=\"common\"\n            style={{\n              marginLeft: \"0.5rem\",\n              marginTop: \"1rem\",\n              padding: \"0.6rem\",\n              borderRadius: \"2rem\",\n              boxShadow: \"0.2rem 0.2rem 0.5rem black\",\n            }}\n          >\n            MOVFLIX\n          </h2>\n        </Link>\n\n        <Link to=\"/favourites\" style={{ textDecoration: \"none\" }}>\n          <h5\n            className=\"common\"\n            style={{\n              marginLeft: \"2rem\",\n              marginTop: \"1rem\",\n              padding: \"1rem\",\n              borderRadius: \"2rem\",\n              boxShadow: \"0.2rem 0.2rem 0.5rem black\",\n            }}\n          >\n            FAVOURITES\n          </h5>\n        </Link>\n      </div>\n    );\n  }\n}\n","// import { movies } from \"./getMovies\";\nimport React, { Component } from \"react\";\n// import { props } from \"./Movies\";\n\nexport default class Banner extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    // let movie = movies.results[0];\n    let movie = this.props.pic[0];\n    // console.log(movie, \"AAAAAAAAA\", this.props);\n    return (\n      <>\n        {movie == \"\" ? (\n          <div className=\"spinner-border text-info \" role=\"status\">\n            <span className=\"visually-hidden \">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"card banner-card \">\n            <img\n              src={`https://image.tmdb.org/t/p/original${movie?.backdrop_path}`}\n              alt={movie?.title}\n              className=\"card-img-top banner-img banner-img\"\n            />\n            {/* <div className=\"card-body\"> */}\n            <h1 className=\"card-title banner-title\">{movie?.original_title}</h1>\n            <p className=\"card-text banner-text\">{movie?.overview}</p>\n            {/* <a href=\"#\" className=\"btn btn-info\">\n              Go somewhere\n            </a> */}\n            {/* </div> */}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Banner from \"./Banner\";\nimport { moviesf } from \"./getMovies\";\n\nexport default class Movies extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hover: \"\",\n      pArr: [1],\n      currPage: 1,\n      movies: [],\n      favourites: [],\n      count: 0,\n      banMov: [],\n    };\n  }\n\n  componentDidMount() {\n    // const res = await axios.get(\n    //   `https://api.themoviedb.org/3/movie/popular?api_key=f1affc5603c4d5b32ab137a0b8f355ce&language=en-US&page=${this.state.currPage}`\n    // );\n\n    // let data = res.data;\n    // // console.log(data);\n    // this.setState({\n    //   movies: [...data.results],\n    // });\n    this.changeMovies();\n    console.log(\"MOUNTING PROCESS\");\n  }\n\n  changeMovies = async () => {\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/movie/popular?api_key=f1affc5603c4d5b32ab137a0b8f355ce&language=en-US&page=${this.state.currPage}`\n    );\n\n    let data = res.data;\n\n    // this.favErrorandle(data);\n    this.setState(\n      {\n        movies: [...data.results],\n        count: this.state.count + 1,\n      },\n      () => {\n        this.handleFavClickState();\n        if (this.state.count === 1) {\n          // console.log(this.state.movies, \"BBBBBBB\");\n\n          this.setState({\n            banMov: this.state.movies,\n          });\n        }\n      }\n    );\n\n    // console.log(this.state.movies, \"DADFFfAW\");\n  };\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\n  // favErrorandle = (data) => {\n  //   console.log(data.results, \"Validating API's data\");\n  //   let oldData = JSON.parse(localStorage.getItem(\"movies\") || \"[]\");\n  //   console.log(oldData, \"SOLANKI\");\n\n  //   data.results.map((dataCurrObj) => {\n  //     oldData.forEach\n  //   });\n  // };\n\n  // HANDLING PAGE NAVIGATION...WHEN WE MOVE FROM 1ST PAGE TO 2ND\n  handleRightClick = () => {\n    console.log(\"NEXT\");\n    let tempArr = [];\n    for (let i = 1; i <= this.state.pArr.length + 1; i++) {\n      tempArr.push(i);\n      //parr = 1, tempArr = 1,2...need to display tempArr..right\n    }\n    this.setState(\n      {\n        pArr: [...tempArr],\n        currPage: this.state.currPage + 1,\n      },\n      this.changeMovies\n    );\n    // PASSING CHANGEMOIVES AS A CALLBACK TO SETSTATE..\n    // SET STATE IS AN ASYNC Function...IF CALL IT SEPARATELY THEN BOTH THE CALLING AND UPDATING THE STATE WOULD GO ON\n    // PARALLELY...WHICH WE DON'T WANT. WE WANT FIRST STATE TO GET CHANGE AND ONCE IT UPDATE & REFLECT THE CHANGE THEN CALL\n    // THE changeMovies()\n    // console.log(tempArr);\n\n    // this.changeMovies();\n  };\n\n  handleLeftClick = () => {\n    if (this.state.currPage != 1) {\n      this.setState(\n        {\n          currPage: this.state.currPage - 1,\n        },\n        this.changeMovies\n      );\n    }\n  };\n\n  handleOnPageClick = (value) => {\n    if (value != this.state.currPage) {\n      this.setState(\n        {\n          currPage: value,\n        },\n        this.changeMovies\n      );\n    }\n  };\n\n  handleFavClick = (movie) => {\n    let oldData = JSON.parse(localStorage.getItem(\"movies\") || \"[]\");\n    if (this.state.favourites.includes(movie.id)) {\n      //means already present need to delete it.\n      oldData = oldData.filter((mov) => mov.id != movie.id);\n    } else {\n      oldData.push(movie);\n    }\n    localStorage.setItem(\"movies\", JSON.stringify(oldData));\n    console.log(oldData, \"XXXXXXXXXXXXXXXXXX\");\n    this.handleFavClickState();\n  };\n\n  handleFavClickState = () => {\n    let oldData = JSON.parse(localStorage.getItem(\"movies\") || \"[]\");\n    let temp = oldData.map((mov) => mov.id);\n    console.log(temp, \"SOLANKI\");\n    this.setState({\n      favourites: [...temp],\n    });\n  };\n\n  render() {\n    // let movie = movies.results;\n    // console.log(movie); movie = array.\n    return (\n      // ////////////////////////////////////////////////////////////////////////////////////////////////////////\n      ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n      //APPLYING LOADER IF MOVIES IS BEING LOADED...IF LOADING COMPLETES THEN DISPLAYING IT USING BOOTSTRAP CARD.\n      <>\n        <Banner pic={this.state.banMov} />\n        {this.state.movies.length == 0 ? (\n          <div class=\"spinner-border text-info \" role=\"status\">\n            <span class=\"visually-hidden common\">Loading...</span>\n          </div>\n        ) : (\n          <div>\n            <h3\n              className=\"text-center common trend\"\n              style={{ marginTop: \"2rem\" }}\n            >\n              <strong>TRENDING TODAY</strong>\n            </h3>\n            {/* //ADDING CARD TO SHOW REST OF THE MOVIES. */}\n            <div className=\"movies-list common\">\n              {this.state.movies.map((movieObj) => (\n                <div\n                  className=\"card movies-card \"\n                  onMouseEnter={() => this.setState({ hover: movieObj.id })}\n                  onMouseLeave={() => this.setState({ hover: \"\" })}\n                >\n                  <img\n                    src={`https://image.tmdb.org/t/p/original${movieObj.backdrop_path}`}\n                    alt={movieObj.title}\n                    className=\"card-img-top banner-img movies-img\"\n                  />\n                  {/* <div className=\"card-body\"> */}\n                  <h5 className=\"card-title movies-title\">\n                    {movieObj.original_title}\n                  </h5>\n                  {/* <p className=\"card-text movies-text\">{movieObj.overview}</p> */}\n                  <div\n                    className=\"button-wrapper\"\n                    style={{\n                      display: \"flex\",\n                      width: \"100%\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {this.state.hover == movieObj.id && (\n                      <a\n                        className=\"btn btn-info movies-button common\"\n                        onClick={() => this.handleFavClick(movieObj)}\n                      >\n                        {this.state.favourites.includes(movieObj.id)\n                          ? \"Remove From Favourites\"\n                          : \"Add To Favourites\"}\n                      </a>\n                    )}\n                  </div>\n                  {/* </div> */}\n                </div>\n              ))}\n            </div>\n            {/* ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////// */}\n            {/* APPLYING PAGINATION  */}\n            <div\n              className=\"page\"\n              style={{ display: \"flex\", justifyContent: \"center\" }}\n            >\n              <nav aria-label=\"Page navigation example\">\n                <ul class=\"pagination\">\n                  <li class=\"page-item\">\n                    <a class=\"page-link common\" onClick={this.handleLeftClick}>\n                      Previous\n                    </a>\n                  </li>\n                  {this.state.pArr.map((val) => (\n                    <li class=\"page-item common\">\n                      <a\n                        class=\"page-link common\"\n                        onClick={() => this.handleOnPageClick(val)}\n                      >\n                        {val}\n                      </a>\n                    </li>\n                  ))}\n                  <li class=\"page-item\">\n                    <a class=\"page-link common\" onClick={this.handleRightClick}>\n                      Next\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","// import React, { Component } from \"react\";\n// import { movies } from \"./getMovies\";\n\n// export default class Favourite extends Component {\n//   constructor() {\n//     super();\n//     this.State = {\n//       genres: [],\n//       currgen: \"All Genres\",\n//       movies: [],\n//     };\n//   }\n\n//   async componentDidMount() {\n//     let genreids = {\n//       28: \"Action\",\n//       12: \"Adventure\",\n//       16: \"Animation\",\n//       35: \"Comedy\",\n//       80: \"Crime\",\n//       99: \"Documentary\",\n//       18: \"Drama\",\n//       10751: \"Family\",\n//       14: \"Fantasy\",\n//       36: \"History\",\n//       27: \"Horror\",\n//       10402: \"Music\",\n//       9648: \"Mystery\",\n//       10749: \"Romance\",\n//       878: \"Sci-Fi\",\n//       10770: \"TV\",\n//       53: \"Thriller\",\n//       10752: \"War\",\n//       37: \"Western\",\n//     };\n//     let data = JSON.parse(localStorage.getItem(\"movies-app\") || \"[]\");\n//     let temp = [];\n//     data.forEach((movieObj) => {\n//       if (!temp.includes(genreids[movieObj.genre_ids[0]])) {\n//         temp.push(genreids[movieObj.genre_ids[0]]);\n//       }\n//     });\n//     temp.unshift(\"All Genres\");\n//     this.setState({\n//       genres: [...temp],\n//       movies: [...data],\n//     });\n//     console.log(this.state.genres);\n//     console.log(this.state.movies);\n//   }\n\n//   render() {\n//     // const movie = movies.results;\n//     // console.log(movie);\n//     //GENRE_IDS IS OF TYPE ARRAY IN API....SO THEIR CORRESPODING VALUES ARE THIS.\n//     let genreids = {\n//       28: \"Action\",\n//       12: \"Adventure\",\n//       16: \"Animation\",\n//       35: \"Comedy\",\n//       80: \"Crime\",\n//       99: \"Documentary\",\n//       18: \"Drama\",\n//       10751: \"Family\",\n//       14: \"Fantasy\",\n//       36: \"History\",\n//       27: \"Horror\",\n//       10402: \"Music\",\n//       9648: \"Mystery\",\n//       10749: \"Romance\",\n//       878: \"Sci-Fi\",\n//       10770: \"TV\",\n//       53: \"Thriller\",\n//       10752: \"War\",\n//       37: \"Western\",\n//     };\n//     //DISPLAYING THE LEFT SIDE TABLE OF ALL GENRE'S AND ALL.\n\n//     // console.log(this.state.currgen);\n\n//     return (\n//       <div>\n//         <>\n//           <div className=\"main\">\n//             <div className=\"row\">\n//               {/* /////////////////////////DISPLAYING GENRE HERE////////////////////////////// */}\n//               <div className=\"col-3\">\n//                 <ul class=\"list-group fav-genere\">\n//                   {\n//                     this.state.genres.map((gen) => (\n//                       <li\n//                         class=\"list-group-item common\"\n//                         // style={{\n//                         //   background: \"#3f51b5\",\n//                         //   color: \"white\",\n//                         //   fontWeight: \"bold\",\n//                         // }}\n//                       >\n//                         {gen}\n//                       </li>\n//                     ))\n//                     // this.state.genres.map((genre) =>\n//                     //   this.state.currgen == genre ? (\n//                     //     <li\n//                     //       class=\"list-group-item\"\n//                     //       style={{\n//                     //         background: \"#3f51b5\",\n//                     //         color: \"white\",\n//                     //         fontWeight: \"bold\",\n//                     //       }}\n//                     //     >\n//                     //       {genre}\n//                     //     </li>\n//                     //   ) : (\n//                     //     <li\n//                     //       class=\"list-group-item\"\n//                     //       style={{ background: \"white\", color: \"#3f51b5\" }}\n//                     //       onClick={() => this.handleGenreChange(genre)}\n//                     //     >\n//                     //       {genre}\n//                     //     </li>\n//                     //   )\n//                     // )\n//                   }\n//                 </ul>\n//               </div>\n//               {/* //////////////////////IN COL9 SPACE WE NEED 2 INPUT AND A TABLE AFTER THAT////////////// */}\n//               <div className=\"col-9\">\n//                 <div className=\"row fav-side \">\n//                   <input\n//                     type=\"text\"\n//                     className=\"input-group-text col common\"\n//                     placeholder=\"Search\"\n//                   ></input>\n//                   <input\n//                     type=\"number\"\n//                     className=\"input-group-text col common\"\n//                     placeholder=\"Row Count\"\n//                   ></input>\n//                 </div>\n//                 {/* ///////////////////////ACQUIRING TABLE FROM BOOTSTRAP//////////////////////////////// */}\n//                 <div className=\"row\">\n//                   <table class=\"table\">\n//                     <thead>\n//                       <tr>\n//                         <th className=\"common\" scope=\"col\">\n//                           Title\n//                         </th>\n//                         <th className=\"common\" scope=\"col \">\n//                           Genre\n//                         </th>\n//                         <th className=\"common\" scope=\"col\">\n//                           Popularity\n//                         </th>\n//                         <th className=\"common\" scope=\"col\">\n//                           Rating\n//                         </th>\n//                         <th className=\"common\" scope=\"col\"></th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {this.state.movies.map((movieObj) => (\n//                         <tr>\n//                           <td>\n//                             {\" \"}\n//                             <img\n//                               src={`https://image.tmdb.org/t/p/original${movieObj.backdrop_path}`}\n//                               alt={movieObj.title}\n//                               style={{ width: \"5rem\", marginRight: \"1rem\" }}\n//                             ></img>{\" \"}\n//                             {movieObj.original_title}\n//                           </td>\n//                           <td>{genreids[movieObj.genre_ids[0]]}</td>\n//                           <td>{movieObj.popularity}</td>\n//                           <td>{movieObj.vote_average}</td>\n//                           <td>\n//                             <button type=\"button\" class=\"btn btn-danger\">\n//                               Delete\n//                             </button>\n//                           </td>\n//                         </tr>\n//                       ))}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//                 {/* ////////////////////////APPLYING PAGINATION/////////////////////////////////////////////                 */}\n//                 <nav aria-label=\"Page navigation example \">\n//                   <ul class=\"pagination\">\n//                     <li class=\"page-item \">\n//                       <a class=\"page-link common\" href=\"#\">\n//                         Previous\n//                       </a>\n//                     </li>\n//                     <li class=\"page-item\">\n//                       <a class=\"page-link\" href=\"#\">\n//                         1\n//                       </a>\n//                     </li>\n//                     <li class=\"page-item\">\n//                       <a class=\"page-link\" href=\"#\">\n//                         2\n//                       </a>\n//                     </li>\n//                     <li class=\"page-item\">\n//                       <a class=\"page-link\" href=\"#\">\n//                         3\n//                       </a>\n//                     </li>\n//                     <li class=\"page-item\">\n//                       <a class=\"page-link common\" href=\"#\">\n//                         Next\n//                       </a>\n//                     </li>\n//                   </ul>\n//                 </nav>\n//               </div>\n//             </div>\n//           </div>\n//         </>\n//       </div>\n//     );\n//   }\n// }\n\nimport React, { Component } from \"react\";\nimport { movies } from \"./getMovies\";\n\nexport default class Favourite extends Component {\n  constructor() {\n    super();\n    this.state = {\n      genres: [],\n      currgen: \"All Genres\",\n      movies: [],\n      currText: \"\",\n      limit: 5,\n      currPage: 1,\n    };\n  }\n  componentDidMount() {\n    let genreids = {\n      28: \"Action\",\n      12: \"Adventure\",\n      16: \"Animation\",\n      35: \"Comedy\",\n      80: \"Crime\",\n      99: \"Documentary\",\n      18: \"Drama\",\n      10751: \"Family\",\n      14: \"Fantasy\",\n      36: \"History\",\n      27: \"Horror\",\n      10402: \"Music\",\n      9648: \"Mystery\",\n      10749: \"Romance\",\n      878: \"Sci-Fi\",\n      10770: \"TV\",\n      53: \"Thriller\",\n      10752: \"War\",\n      37: \"Western\",\n    };\n    let data = JSON.parse(localStorage.getItem(\"movies\") || \"[]\");\n    let temp = [];\n    data.forEach((movieObj) => {\n      if (!temp.includes(genreids[movieObj.genre_ids[0]])) {\n        temp.push(genreids[movieObj.genre_ids[0]]);\n      }\n    });\n    temp.unshift(\"All Genres\");\n    this.setState({\n      genres: [...temp],\n      movies: [...data],\n    });\n  }\n  handleGenreChange = (genre) => {\n    this.setState({\n      currgen: genre,\n    });\n  };\n  sortPopularityDesc = () => {\n    let temp = this.state.movies;\n    temp.sort(function (objA, objB) {\n      return objB.popularity - objA.popularity;\n    });\n    this.setState({\n      movies: [...temp],\n    });\n  };\n  sortPopularityAsc = () => {\n    let temp = this.state.movies;\n    temp.sort(function (objA, objB) {\n      return objA.popularity - objB.popularity;\n    });\n    this.setState({\n      movies: [...temp],\n    });\n  };\n\n  sortRatingDesc = () => {\n    let temp = this.state.movies;\n    temp.sort(function (objA, objB) {\n      return objB.vote_average - objA.vote_average;\n    });\n    this.setState({\n      movies: [...temp],\n    });\n  };\n  sortRatingAsc = () => {\n    let temp = this.state.movies;\n    temp.sort(function (objA, objB) {\n      return objA.vote_average - objB.vote_average;\n    });\n    this.setState({\n      movies: [...temp],\n    });\n  };\n  handlePageChange = (page) => {\n    this.setState({\n      currPage: page,\n    });\n  };\n  handleDelete = (id) => {\n    let newarr = [];\n    newarr = this.state.movies.filter((movieObj) => movieObj.id != id);\n    this.setState({\n      movies: [...newarr],\n    });\n    localStorage.setItem(\"movies\", JSON.stringify(newarr));\n  };\n  render() {\n    let genreids = {\n      28: \"Action\",\n      12: \"Adventure\",\n      16: \"Animation\",\n      35: \"Comedy\",\n      80: \"Crime\",\n      99: \"Documentary\",\n      18: \"Drama\",\n      10751: \"Family\",\n      14: \"Fantasy\",\n      36: \"History\",\n      27: \"Horror\",\n      10402: \"Music\",\n      9648: \"Mystery\",\n      10749: \"Romance\",\n      878: \"Sci-Fi\",\n      10770: \"TV\",\n      53: \"Thriller\",\n      10752: \"War\",\n      37: \"Western\",\n    };\n\n    let filterarr = [];\n\n    if (this.state.currText === \"\") {\n      filterarr = this.state.movies;\n    } else {\n      filterarr = this.state.movies.filter((movieObj) => {\n        let title = movieObj.original_title.toLowerCase();\n        return title.includes(this.state.currText.toLowerCase());\n      });\n    }\n\n    // if(this.state.currgen==\"All Genres\"){\n    //     filterarr = this.state.movies\n    // }\n    if (this.state.currgen != \"All Genres\") {\n      filterarr = this.state.movies.filter(\n        (movieObj) => genreids[movieObj.genre_ids[0]] == this.state.currgen\n      );\n    }\n    let pages = Math.ceil(filterarr.length / this.state.limit);\n    let pagesarr = [];\n    for (let i = 1; i <= pages; i++) {\n      pagesarr.push(i);\n    }\n    let si = (this.state.currPage - 1) * this.state.limit;\n    let ei = si + this.state.limit;\n    filterarr = filterarr.slice(si, ei);\n    return (\n      <div>\n        <>\n          <div className=\"main\">\n            <div className=\"row\">\n              <div className=\"col-lg-3 col-sm-12\">\n                <ul class=\"list-group fav-genere common cur\">\n                  {this.state.genres.map((genre) =>\n                    this.state.currgen == genre ? (\n                      <li\n                        class=\"list-group-item common \"\n                        // style={{\n                        //   background: \"#3f51b5\",\n                        //   color: \"white\",\n                        //   fontWeight: \"bold\",\n                        // }}\n                      >\n                        {genre}\n                      </li>\n                    ) : (\n                      <li\n                        class=\"list-group-item\"\n                        style={{ background: \"white\", color: \"black\" }}\n                        onClick={() => this.handleGenreChange(genre)}\n                      >\n                        {genre}\n                      </li>\n                    )\n                  )}\n                </ul>\n              </div>\n              <div className=\"col-lg-9 fav-side col-sm-12 \">\n                <div className=\"row\">\n                  <input\n                    type=\"text\"\n                    className=\"input-group-text col common\"\n                    placeholder=\"Search\"\n                    value={this.state.currText}\n                    onChange={(e) =>\n                      this.setState({ currText: e.target.value })\n                    }\n                  />\n                  <input\n                    type=\"number\"\n                    className=\"input-group-text col common\"\n                    placeholder=\"Rows Count\"\n                    value={this.state.limit}\n                    onChange={(e) => this.setState({ limit: e.target.value })}\n                  />\n                </div>\n                <div className=\"row tab\">\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Genre</th>\n                        <th scope=\"col\" style={{ textAlign: \"center\" }}>\n                          <i\n                            class=\"fas fa-sort-up cur\"\n                            onClick={this.sortPopularityDesc}\n                          />\n                          Popularity\n                          <i\n                            class=\"fas fa-sort-down cur\"\n                            onClick={this.sortPopularityAsc}\n                          ></i>\n                        </th>\n                        <th scope=\"col\" style={{ textAlign: \"center\" }}>\n                          <i\n                            class=\"fas fa-sort-up cur\"\n                            onClick={this.sortRatingDesc}\n                          ></i>\n                          Rating\n                          <i\n                            class=\"fas fa-sort-down cur\"\n                            onClick={this.sortRatingAsc}\n                          ></i>\n                        </th>\n                        <th scope=\"col\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filterarr.map((movieObj) => (\n                        <tr>\n                          <td>\n                            <img\n                              src={`https://image.tmdb.org/t/p/original${movieObj.backdrop_path}`}\n                              alt={movieObj.title}\n                              style={{ width: \"5rem\" }}\n                            />{\" \"}\n                            {movieObj.original_title}\n                          </td>\n                          <td>{genreids[movieObj.genre_ids[0]]}</td>\n                          <td style={{ textAlign: \"center\" }}>\n                            {movieObj.popularity}\n                          </td>\n                          <td style={{ textAlign: \"center\" }}>\n                            {movieObj.vote_average}\n                          </td>\n                          <td>\n                            <button\n                              type=\"button\"\n                              class=\"btn btn-danger\"\n                              onClick={() => this.handleDelete(movieObj.id)}\n                            >\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                <nav aria-label=\"Page navigation example\">\n                  <ul class=\"pagination\">\n                    {pagesarr.map((page) => (\n                      <li class=\"page-item\">\n                        <a\n                          class=\"page-link common\"\n                          onClick={() => this.handlePageChange(page)}\n                        >\n                          {page}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Banner from \"./Banner\";\nimport Movies from \"./Movies\";\n\nexport default class merge extends Component {\n  render() {\n    return (\n      <div style={{ flex: 1, height: \"100%\", flexDirection: \"column\" }}>\n        {/* <Banner /> */}\n        <Movies />\n      </div>\n    );\n  }\n}\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport Banner from \"./Components/Banner\";\nimport Movies from \"./Components/Movies\";\nimport Favourite from \"./Components/Favourite\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Merge from \"./Components/Merge\";\n\n// function App() {\n//   return (\n//     <Router>\n//       <Navbar />\n//       <Routes>\n// <Route\n//   path=\"/\"\n//   render={(props) => (\n//     <>\n//       <Banner {...props} />\n//       <Movies {...props} />\n//     </>\n//   )}\n// />\n\n//         <Route path=\"/favourites\" element={<Favourite />} />\n//       </Routes>\n//       {/* <Banner /> */}\n//       {/* <Movies /> */}\n//       {/* <Favourite /> */}\n//     </Router>\n//   );\n// }\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route\n          path=\"/\"\n          exact\n          // element={<Movies />}\n          element={<Merge />}\n        />\n        <Route path=\"/favourites\" element={<Favourite />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}